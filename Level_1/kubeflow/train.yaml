name: train
description: description train

inputs:
- {name: model-dir, type: String, description: 'Model dir'}
- {name: bucket, type: String, description: 'bucket name'}
- {name: preprocess-data-dir, type: String, description: 'directory where to save preprocess data'}
- {name: temp-dir, type: String, description: 'Temp dir set during Vertex AI training'}
- {name: batch-size, type: Integer, description: 'Embedding data GCS or GQ URI set during Vertex AI training'}
- {name: filters, type: Integer, description: 'Embedding data GCS or GQ URI set during Vertex AI training'}
- {name: dropout, type: Float, description: 'Embedding data GCS or GQ URI set during Vertex AI training'}
- {name: n-checkpoints, type: Integer, description: 'Embedding data GCS or GQ URI set during Vertex AI training'}
- {name: embedding-dim, type: int, description: 'Embedding dimension'}

outputs:
- {name: output-model-dir, type: String, description: 'Temp dir set during Vertex AI training'}

implementation:
  container:
    image: <IMAGE_TRAIN>:latest
    # command is a list of strings (command-line arguments).
    # The YAML language has two syntaxes for lists and you can use either of them.
    # Here we use the "flow syntax" - comma-separated strings inside square brackets.
    command: [
      python3,
      # Path of the program inside the container
      /trainer/task.py,
      --model-dir,
      {inputValue: model-dir},
      --bucket,
      {inputValue: bucket},
      --preprocess-data-dir,
      {inputValue: preprocess-data-dir},
      --batch-size,
      {inputValue: batch-size},
      --filters,
      {inputValue: filters},
      --dropout,
      {inputValue: dropout},
      --n-checkpoints,
      {inputValue: n-checkpoints},
      --embedding-dim,
      {inputValue: embedding-dim},
      --temp-dir,
      {inputValue: temp-dir},
      --output-model-dir,
      {outputPath: output-model-dir}
    ]
